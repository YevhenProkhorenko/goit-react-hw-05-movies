{"version":3,"file":"static/js/881.f00e479f.chunk.js","mappings":"iRACA,EAA6B,2BAA7B,EAAoE,0BAApE,EAA0G,0B,SCM3F,SAASA,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOO,EAAP,KAAeC,EAAf,KACA,GAAkCR,EAAAA,EAAAA,UAAS,IAA3C,eAAOS,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAL,CAGA,IAAMK,EAAU,mCAAG,oGAEff,GAAa,GAFE,UAGIgB,EAAAA,EAAAA,IAAgBN,GAHpB,OAGTO,EAHS,OAIfnB,EAAUmB,EAAKC,SAJA,gDAMfhB,EAAS,EAAD,IANO,yBAQfF,GAAa,GARE,4EAAH,qDAWhBe,GAZC,CAaF,GAAE,CAACL,EAAOP,IAiBX,OACE,6BACE,kBAAMgB,SAZW,SAAAC,GACnBA,EAAEC,iBACuB,KAArBhB,EAAUiB,QAIdlB,EAAUC,GACVI,EAAgB,CAAEC,MAAOL,KAJvBkB,MAAM,uBAKT,EAIiCC,UAAWC,EAAzC,WACE,kBACEC,SAnBa,SAAAN,GACnB,IAAMO,EAAQP,EAAEQ,OAAOD,MACvBrB,EAAaqB,EACd,EAiBOE,KAAK,OACLC,aAAa,KACbH,MAAOtB,EACP0B,UAAU,KACVC,YAAY,8BACZR,UAAWC,KAEb,mBAAQD,UAAWC,EAAnB,wBAEF,gCACG1B,IAAa,SAACkC,EAAA,EAAD,IACbhC,IAAS,gDACTJ,IAAU,SAAC,IAAD,CAAYA,OAAQA,EAAQqC,MAAO,CAAEC,KAAMvB,UAI7D,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"Movies_SearchForm__EKSZc\",\"TextField\":\"Movies_TextField__TCkE8\",\"SearchBtn\":\"Movies_SearchBtn__z2sgZ\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { getSearchMovies } from 'Shared/API/FetchMovies';\nimport Loader from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MovieList/MovieList';\nimport css from './Movies.module.css';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [search, setSearch] = useState('');\n  const [inputUser, setInputUser] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    const fetchMovie = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getSearchMovies(query);\n        setMovies(data.results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [query, search]);\n\n  const handleChange = e => {\n    const value = e.target.value;\n    setInputUser(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputUser.trim() === '') {\n      alert('No such movie exists');\n      return;\n    }\n    setSearch(inputUser);\n    setSearchParams({ query: inputUser });\n  };\n\n  return (\n    <main>\n      <form onSubmit={handleSubmit} className={css.SearchForm}>\n        <input\n          onChange={handleChange}\n          type=\"text\"\n          autoComplete=\"on\"\n          value={inputUser}\n          autoFocus=\"on\"\n          placeholder=\"Enter the name of the movie\"\n          className={css.TextField}\n        />\n        <button className={css.SearchBtn}>Search</button>\n      </form>\n      <>\n        {isLoading && <Loader />}\n        {error && <p>Something went wrong</p>}\n        {movies && <MoviesList movies={movies} state={{ from: location }} />}\n      </>\n    </main>\n  );\n}\n"],"names":["Movies","useState","movies","setMovies","isLoading","setIsLoading","error","setError","search","setSearch","inputUser","setInputUser","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","fetchMovie","getSearchMovies","data","results","onSubmit","e","preventDefault","trim","alert","className","css","onChange","value","target","type","autoComplete","autoFocus","placeholder","Loader","state","from"],"sourceRoot":""}