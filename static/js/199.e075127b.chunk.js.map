{"version":3,"file":"static/js/199.e075127b.chunk.js","mappings":"iRAEaA,EAAa,SAAC,GACzB,OADwC,EAAbC,OACbC,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3B,OACE,2BACE,oCAAYD,MACZ,uBAAIC,OAFGC,EAAAA,EAAAA,MAKZ,GACF,ECLc,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAON,EAAP,KAAeO,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,uFACdH,EADc,iEAKjBD,GAAa,GALI,UAMEK,EAAAA,EAAAA,IAAeJ,GANjB,OAMXK,EANW,OAOjBV,EAAUU,GAPO,kDASjBR,EAAS,EAAD,IATS,yBAWjBE,GAAa,GAXI,6EAAH,qDAclBI,GACD,GAAE,CAACH,KAGF,0BACGF,IAAa,SAACQ,EAAA,EAAD,IACbV,IAAS,gDAETR,IAAU,SAACD,EAAD,CAAYC,OAAQA,EAAOmB,UACrCnB,GAAoC,IAA1BA,EAAOmB,QAAQC,SACxB,iEAIP,C","sources":["components/Reviews/ReviewItem.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import { nanoid } from 'nanoid';\n\nexport const ReviewItem = ({ review }) => {\n  return review.map(({ author, content }) => {\n    return (\n      <li key={nanoid()}>\n        <p>Author: {author}</p>\n        <p>{content}</p>\n      </li>\n    );\n  });\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport { getUserReviews } from 'Shared/API/FetchMovies';\nimport { ReviewItem } from './ReviewItem';\n\nexport default function Reviews() {\n  const [review, setReview] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      if (!id) {\n        return;\n      }\n      try {\n        setIsLoading(true);\n        const data = await getUserReviews(id);\n        setReview(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchReviews();\n  }, [id]);\n\n  return (\n    <ul>\n      {isLoading && <Loader />}\n      {error && <p>Something went wrong</p>}\n\n      {review && <ReviewItem review={review.results} />}\n      {review && review.results.length === 0 && (\n        <p>There are no reviews for this movie</p>\n      )}\n    </ul>\n  );\n}\n"],"names":["ReviewItem","review","map","author","content","nanoid","Reviews","useState","setReview","error","setError","isLoading","setIsLoading","id","useParams","useEffect","fetchReviews","getUserReviews","data","Loader","results","length"],"sourceRoot":""}